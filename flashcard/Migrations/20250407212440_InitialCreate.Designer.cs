// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using flashcard.Data;

#nullable disable

namespace flashcard.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250407212440_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("flashcard.Models.Flashcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DanishWord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishWord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Flashcards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DanishWord = "brød",
                            EnglishWord = "bread",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 2,
                            DanishWord = "ost",
                            EnglishWord = "cheese",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 3,
                            DanishWord = "mælk",
                            EnglishWord = "milk",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 4,
                            DanishWord = "æble",
                            EnglishWord = "apple",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 5,
                            DanishWord = "banan",
                            EnglishWord = "banana",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 6,
                            DanishWord = "kød",
                            EnglishWord = "meat",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 7,
                            DanishWord = "fisk",
                            EnglishWord = "fish",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 8,
                            DanishWord = "vand",
                            EnglishWord = "water",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 9,
                            DanishWord = "salt",
                            EnglishWord = "salt",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 10,
                            DanishWord = "smør",
                            EnglishWord = "butter",
                            TopicId = 1
                        });
                });

            modelBuilder.Entity("flashcard.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Food"
                        });
                });

            modelBuilder.Entity("flashcard.Models.Flashcard", b =>
                {
                    b.HasOne("flashcard.Models.Topic", "Topic")
                        .WithMany("Flashcards")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("flashcard.Models.Topic", b =>
                {
                    b.Navigation("Flashcards");
                });
#pragma warning restore 612, 618
        }
    }
}
